proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=one:8m max_size=50m inactive=30m;
proxy_temp_path /var/tmp/nginx;

upstream atw-api {
 server atw-api.atwater:8000;
}

upstream api01 {
 server api01.internal:443;
}

upstream apilive01 {
 server apilive01.internal:443;
}

server {
  listen 443 ssl;
  server_name atw-api.indexexchange.com;

   ssl_certificate     ssl/market.indexexchange.com.crt;
   ssl_certificate_key ssl/market.indexexchange.com.key;

  location /ixm/ {

      if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Headers 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since';
        add_header Access-Control-Allow-Origin "$http_origin";
        add_header Access-Control-Allow-Credentials 'true';
        add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
        add_header Content-Length 0;
        add_header Content-Type 'text/plain charset=UTF-8';
        return 204;
      }

      proxy_pass         http://atw-api;
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Connection 'update';
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_cache_bypass $http_upgrade;
      proxy_cache        one;
      proxy_cache_key    "$scheme$host$uri$is_args$args";
      proxy_buffers      50 64k;
    }

}

server {
	listen 443 ssl;
	server_name api01.indexexchange.com;

    ssl_certificate     ssl/market.indexexchange.com.crt;
    ssl_certificate_key ssl/market.indexexchange.com.key;

	location / {
	    proxy_pass         https://api01;
        proxy_set_header Host       $http_host;
	}
}

server {
    listen 443;
    server_name apilive01.indexexchange.com;

    ssl_certificate     ssl/market.indexexchange.com.crt;
    ssl_certificate_key ssl/market.indexexchange.com.key;

    location / {
        proxy_pass         https://apilive01;
        proxy_set_header Host       $http_host;
    }
}