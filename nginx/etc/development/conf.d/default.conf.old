proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=one:8m max_size=50m inactive=30m;
proxy_temp_path /var/tmp/nginx;

# containerized api
upstream atw-api {
  server atw-api:8000;
}

server {
    listen       443 ssl;
    server_name  atw-api.*;

    ## SSL Settings
    ssl_certificate     ssl/system.indexexchange.com.crt;
    ssl_certificate_key ssl/system.indexexchange.com.key;

    # Prevent POODLE attack
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    # Prevent LOGJAM attack
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_dhparam /etc/nginx/conf.d/dhparams.pem;

    ssl_prefer_server_ciphers on;

    #root /opt/atwater/assets;

    # Forward to API
    location /api/ { 
      if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Headers 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since';
        add_header Access-Control-Allow-Origin "$http_origin";
        add_header Access-Control-Allow-Credentials 'true';
        add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
        add_header Content-Length 0;
        add_header Content-Type 'text/plain charset=UTF-8';
        return 204;
      }

      proxy_pass         http://atw-api:8000;
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Connection 'update';
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_cache_bypass $http_upgrade;
      proxy_cache        one;
      proxy_cache_key    "$scheme$host$uri$is_args$args";
      proxy_buffers      50 64k;
    }

    # Serve static assets.
    location /static {
      add_header Strict-Transport-Security 'max-age=31536000; includeSubdomains; preload';
      add_header Access-Control-Allow-Origin "$http_origin";
      add_header Access-Control-Allow-Credentials 'true';
    }

    # If errors occur, serve simple error pages.
    error_page 404 /404.html;
    error_page 500 502 503 504 /500.html;

    # Serve basic home page.
    location = /index.html {
      rewrite /index.html /pages/index.html;
    }

    # Serve basic home page.
    location = / {
      rewrite / /pages/index.html;
    }

    # Serve 404 page.
    location = /404.html {
      rewrite /404.html /pages/404.html;
    }

    # Serve 500 page.
    location = /500.html {
      rewrite /500.html /pages/500.html;
    }
}
